/*
 Name:		han_clock.ino
 Created:	2020-08-25 오후 5:32:32
 Author:	daseu
 Ver.Arpha - RTC모듈에서 시간 데이터를 추출, 단순히 흰색으로 밝게 표시
 - - - - - - - - - - - - - -
 Ver.Beta - RTC모듈에 오차가 많은 관계로 내부 millis함수를 이용하기로 함
 Ver.Beta_2 - 시계의 색깔을 자유자재로 표현
 Ver.Beta_3 - 시계의 외부에 버튼을 장착, 버튼을 통해 시간조작과 LED색깔조절 기능을 가능케 함
 Ver.1.0 - 기본 시간 2020.10.01 에서 시계 시작, 베타버전 기능 포함
 Ver.1.1 - 추가적으로 안정성 관련 수정

*/

// 한 두 세 네 다 섯 
// 여 섯 일 곱 여 덟 
// 아 홉 열 한 두 시 
// 자 이 삼 사 오 십 
// 정 일 이 삼 사 육 
// 오 오 칠 팔 구 분

/*
시간을 읽음
만약 전 값과 시간 값이 다르면
	지금 시간 값 업데이트
	해당 위치 LED 표시
		if 한 시라면{
			한 시에 해당하는 불 켜기
		...
만약 분 값이 다르면
	지금 분 값 업데이트
	해당 위치 LED 표시
		if 일 분이라면{
			일 분에 해당하는 불 켜기
		...
*/

#include <DS1302.h>
#include <Adafruit_NeoPixel.h>
#include <avr/power.h> // Required for 16 MHz Adafruit Trinket
#ifdef __AVR__
#endif
//상수선언
#define LED_PIN 6
#define LED_COUNT 36
#define SCK_PIN 4
#define IO_PIN 3
#define RST_PIN 2
//객체선언
DS1302 rtc(RST_PIN, IO_PIN, SCK_PIN);
Adafruit_NeoPixel strip(LED_COUNT, LED_PIN, NEO_GRB + NEO_KHZ800);
Time t;
//변수선언
int hours,mins,secs = 0;
int cr, cg, cb = 0;
int bright = 255;	//255가 최대, 0이 최소, 5단계 제어



void setup() {
#if defined(__AVR_ATtiny85__) && (F_CPU == 16000000)
	clock_prescale_set(clock_div_1);
#endif
	//시리얼 모니터
	Serial.begin(115200);
	Serial.println("Hangeul Clock has turn ON");
	//네오픽셀 초기설정
	strip.begin();           // INITIALIZE NeoPixel strip object (REQUIRED)
	strip.show();            // Turn OFF all pixels ASAP
	strip.setBrightness(255);
	//RTC모듈 초기설정
	rtc.halt(false);    // Clear the 1302's halt flag
    rtc.writeProtect(false);    //And disable write protection 

	t = rtc.getTime();
	int secs = t.sec;
	//초 값이 0일 때 프로그램이 시작되게 하게 함으로써 깔끔하게 시작하게 함
	//여기에서도 현재 시간 출력하고 대기하게 하기
	while (1) {
		t = rtc.getTime();
		secs = t.sec;
		Serial.println(secs);
		if (secs == 0) break;
		delay(100);
	}
	Serial.println("Clock start");	//현재 초 값 출력
}

void loop() {
	t = rtc.getTime();	//현재시간 업데이트
	hours = t.hour;
	mins = t.min;
	Serial.print(hours);
	Serial.print(":");
	Serial.println(mins);
	ledclear();	//시계 초기화
	if (!((hours == 0 || hours == 12) && mins == 0)) {	//특수한 경우를 위해
		updateHour(hours);
		updateMin(mins);
	} else {
		if (hours == 0) {	//자정일 때
			printled(17);
			printled(6);
		} else {			//정오일 때
			printled(6);
			printled(5);
		}
	}
	strip.show();
	printTime();	//현재시간 출력
	delay(60000);	//60초 대기
}

// 31 32 33 34 35 36
// 30 29 28 27 26 25
// 19 20 21 22 23 24
// 18 17 16 15 14 13
// 7  8  9  10 11 12
// 6  5  4  3  2  1 

int updateHour(int h) {
	printled(23);
	if (h == 0 || h == 12) { printled(20); printled(22); }
	else if (h == 1 || h == 13) { printled(30); }
	else if (h == 2 || h == 14) { printled(31); }
	else if (h == 3 || h == 15) { printled(32); }
	else if (h == 4 || h == 16) { printled(33); }
	else if (h == 5 || h == 17) { printled(34); printled(35); }
	else if (h == 6 || h == 18) { printled(29); printled(28); }
	else if (h == 7 || h == 19) { printled(27); printled(26); }
	else if (h == 8 || h == 20) { printled(25); printled(24); }
	else if (h == 9 || h == 21) { printled(18); printled(19); }
	else if (h == 10 || h == 22) printled(20);
	else if (h == 11 || h == 23) { printled(20); printled(21); }
}

int updateMin(int m) {
	printled(0);
	int ten = m / 10;
	if (ten == 1) printled(12);
	else if (ten == 2) { printled(12); printled(16); }
	else if (ten == 3) { printled(12); printled(15); }
	else if (ten == 4) { printled(12); printled(14); }
	else if (ten == 5) { printled(12); printled(13); }

	m -= ten * 10;
	if (m == 0) strip.setPixelColor(0, 0, 0, 0);
	else if (m == 1) printled(7);
	else if (m == 2) printled(8);
	else if (m == 3) printled(9);
	else if (m == 4) printled(10);
	else if (m == 5) printled(4);
	else if (m == 6) printled(11);
	else if (m == 7) printled(3);
	else if (m == 8) printled(2);
	else if (m == 9) printled(1);
}

void printled(int n) {
	strip.setPixelColor(n, 255, 255, 255);
}

void ledclear() {
	for (int i = 0; i < strip.numPixels(); i++) {
		strip.setPixelColor(i,0,0,0);
	}
	strip.show();
}

void printTime() {
	Serial.println();
	Serial.print("It is ");
	Serial.print(rtc.getDOWStr());
	Serial.print(" ");
	Serial.print(rtc.getDateStr());
	Serial.print(" ");
	Serial.print("and the time is: ");
	Serial.println(rtc.getTimeStr());
}